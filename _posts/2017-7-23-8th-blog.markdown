---
layout: post
title: "python"
date: 2017-7-23 18:00:00 +8000
categories: python
tags: python
author: summer
---

* content
{:toc}

15年底的时候写过一段时间Python，没有坚持下去，如今工作了，在业余生活中抽出时间重拾曾学习过的Python。




## Python2.7

这是廖雪峰Python教程中的一段示例代码

'''
# -*- coding: utf-8 -*-
'simple ORM  using metaclass'

__author__ = 'summer'

class Field(object):
	"""docstring for Field"""
	def __init__(self, name, column_type):
		self.name = name
		self.column_type = column_type
	def __str__(self):
		return '<%s:%s>' % (self.__class__.__name__,self.name)

class StringField(Field):
	"""docstring for StringField"""
	def __init__(self, name):
		super(StringField,self).__init__(name,'varchar(100)')

class IntegerField(Field):
	"""docstring for IntegerField"""
	def __init__(self, name):
		super(IntegerField, self).__init__(name,'bigint')

class ModelMetaClass(type):
	
	def __new__(cls, name, bases, attrs):
		if name == 'Model':
			return type.__new__(cls, name, bases, attrs)
		print ('Found model : %s ' % name)
		mappings = dict()
		for k,v in attrs.iteritems():
			if isinstance(v,Field):
				print ('Found mapping: %s ==> %s' %(k,v) )
				mappings[k] = v 
		for k in mappings.iterkeys():
			attrs.pop(k)
		attrs['__mappings__']=mappings # 保存属性和列的映射关系
		attrs['__table__'] = name #假设表名和类名一致
		return type.__new__(cls, name, bases, attrs)
class Model(dict):
	"""docstring for Model"""
	__metaclass__ = ModelMetaClass
	def __init__(self, **kw):
		super(Model, self).__init__(**kw)
	def __getattr__(self,key):
		try:
			return self[key]
		except KeyError:
			raise AttributeError(r"'Model' object has no attribute '%s'" % key)
	def __setattr__(self,key,value):
		self[key] = value
	def save(self):
		fields = []
		params = []
		args = []
		for k ,v in self.__mappings__.iteritems():
			fields.append(v.name)
			params.append('?')
			args.append(getattr(self,k,None))
		sql = 'insert into %s (%s) values (%s)' % (self.__table__, ','.join(fields), ','.join(params))
	
		print ('SQL: %s' % sql )
		print ('ARGS: %s' % str(args))	
						
# testing code 

class User(Model):

	id = IntegerField('uid')
	name = StringField('username')
	email = StringField('email')
	password = StringField('password')

u = User(id=12345,name='summer',email='123@mm',password='mypsd')

u.save()
'''


